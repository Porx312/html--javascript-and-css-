// 5 exercises project euler 1-5
/* 
1 ) If we list all the natural numbers below $10$ that are multiples of $3$ or $5$, we get $3, 5, 6$ and $9$. The sum of these multiples is $23$.

Find the sum of all the multiples of $3$ or $5$ below $1000$. */

function multipliesNumber(num){
let sum = 0;
for(let i = 0; i < num; i++){
  if(i % 3 == 0 || i % 5 == 0){
    sum += i
  }}
  return sum
}

// console.log(multipliesNumber(100))



/* <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
$$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>
 */


function Fibonacci(num){
let a = 1
let b = 2
let c;
for(let i = 1;i < num;i++){
if(a < b){
  c = a + b
  a = b
  b = c
 console.log(c)
}
} 
}
// Fibonacci(50)
/* 

<p>The prime factors of $13195$ are $5, 7, 13$ and $29$.</p>
<p>What is the largest prime factor of the number $600851475143$?</p>
 */


function largestPrimeFactor(number){
let factor = 2 
while(factor <= number){
if(number % factor == 0){
  number /= factor
}else{
factor++
}
console.log(factor)
}
return factor
}
/* const number = 600851475143;
const largestFactor = largestPrimeFactor(number);

console.log("The largest prime factor of", number, "is", largestFactor); */



/* <p>A palindromic number reads the same both ways. The largest palindrome made from the product of two $2$-digit numbers is $9009 = 91 \times 99$.</p>
<p>Find the largest palindrome made from the product of two $3$-digit numbers.</p>
 */


function isPalindrome(number) {
  // primero aca tenemos una funcion de ver si es un palindromo
  const str = String(number); 
  // aca convertimos el number en un string lo almacenamos en la variable str 
  const reversedStr = str.split('').reverse().join('');
  // luego let damos la vuelta a el str y lo agregamos en  otra variable
  return str === reversedStr;
  // aca confirmamos que sean iguales
}

function largestPalindromeProduct() {
  // luego tenemos una nueva fucnin para ver el largo del palindromo
  let largestPalindrome = 0;
  // inizializamos una variable en 0
  for (let i = 200; i >= 100; i--) {
    // ahora empezzams un bucle en i y mientras 999 sea mayor que 100 va a continuar y se disminuye termina en 100
    for (let j = 200; j >= 100; j--) {
      // aca igual pero en i
      const product = i * j;
      // tecnicamente aca se empieza a multiplicar i * j  seria 999 * 999 hasta llega a 0
      console.log(product);
      if (isPalindrome(product) && product > largestPalindrome) {
        // aca confirma que product sea true y prodcut sea mayyor que largestPalindrome 
        largestPalindrome = product;
        // mientras eso sea cierto largestPalindrome  se establece como el valor de product
      }
    }
  }

  return largestPalindrome;
}

const largestPalindrome = largestPalindromeProduct();
console.log("The largest palindrome made from the product of two 3-digit numbers is:", largestPalindrome);
